ext {
  // EDIT HERE to customize for your environment
  casServerUrl = "https://my.cas.server/cas"
  serverName = "http://this.computer:8080"
  // END of customization
  
  // Where do we look for the web.xml template and file?
  webXmlTemplate = new File('src/templates/web.xml');
  webXmlFile = new File('build/web.xml');
}

apply plugin: 'war'
apply plugin: 'jetty'

war {
  webXml = file(webXmlFile)
}

repositories {
  maven {
    url "http://central.maven.org/maven2/"
  }
  maven {
    url "https://build.shibboleth.net/nexus/content/repositories/releases/"
  }
  maven {
    url "https://repository.apache.org/content/repositories/releases/"
  }
  //mavenCentral()
}

dependencies {
  compile group: 'org.apache.geronimo.specs', name: 'geronimo-jms_1.1_spec', version: '1.1.1'
  compile group: 'org.jasig.cas', name: 'cas-client-core', version: '3.1.10'
  compile group: 'org.jasig.cas.client', name: 'cas-client-support-saml', version: '3.4.1'
  compile group: 'commons-codec', name: 'commons-codec', version: '1.4'
  compile group: 'commons-logging', name: 'commons-logging', version: '1.1'
  compile group: 'org.opensaml', name: 'opensaml', version: '1.1'
  compile group: 'org.apache.santuario', name: 'xmlsec', version: '1.4.0'
  compile group: 'log4j', name: 'log4j', version: '1.2.17'
  compile "javax:javaee-api:7.0"
}

import groovy.text.*

/** fill in the details for the web.xml file */
task genWebXml () {
  inputs.file webXmlTemplate
  outputs.file webXmlFile
} << {
  new File(webXmlFile.canonicalFile.parent).mkdirs()
  def templateText = webXmlTemplate.text
  def webXmlText = new SimpleTemplateEngine().createTemplate(templateText)
                      .make([casServerUrl: casServerUrl,
                             serverName: serverName]);
  webXmlFile.text = webXmlText.toString();
}

classes.dependsOn "genWebXml"

task run (dependsOn: 'jettyRun') {}

